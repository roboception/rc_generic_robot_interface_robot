-- File: gri_hec_routines.kl
-- Hand-Eye Calibration (HEC) routines for FANUC GRI client v12.
-- Contains: hec_init, hec_set_pose, hec_calibrate

-- HEC Function: Initialize HEC pipeline
ROUTINE hec_init(pipeline_id : INTEGER) : INTEGER
  VAR
    dummy_pose : XYZWPR
    req_data_int_arr : ARRAY[NUM_DATA_INTS_TO_SEND] OF INTEGER
    i : INTEGER
    
  BEGIN
    WRITE TPDISPLAY(LPRE_HEC_INIT, 'Initializing HEC pipeline: ', pipeline_id, CR)
    WRITE g_log_file(LPRE_HEC_INIT, 'Initializing HEC pipeline: ', pipeline_id, CR)
    
    -- Send data integers: pipeline_id in data1, others zero
    req_data_int_arr[1] = pipeline_id
    FOR i = 2 TO NUM_DATA_INTS_TO_SEND DO
      req_data_int_arr[i] = 0
    ENDFOR
    
    -- Use comprehensive communication helper
    RETURN(gri_communicate_for_confirmation(REQ_ACTION_HEC_INIT, 0, req_data_int_arr, LPRE_HEC_INIT))
  END hec_init

-- HEC Function: Set pose for calibration  
ROUTINE hec_set_pose(pipeline_id : INTEGER; slot_id : INTEGER) : INTEGER
  VAR
    req_data_int_arr : ARRAY[NUM_DATA_INTS_TO_SEND] OF INTEGER
    i : INTEGER
    dummy_int : INTEGER
    
  BEGIN
    WRITE TPDISPLAY(LPRE_HEC_SET, 'Setting pose ', slot_id, ' for pipeline ', pipeline_id, CR)
    WRITE g_log_file(LPRE_HEC_SET, 'Setting pose ', slot_id, ' for pipeline ', pipeline_id, CR)
    -- Pose will be captured at send time in send_pose_data
    
    -- Send data integers: pipeline_id in data1, slot_id in data2, others zero
    req_data_int_arr[1] = pipeline_id
    req_data_int_arr[2] = slot_id
    FOR i = 3 TO NUM_DATA_INTS_TO_SEND DO
      req_data_int_arr[i] = 0
    ENDFOR
    
    -- Use comprehensive communication helper
    RETURN(gri_communicate_for_confirmation(REQ_ACTION_HEC_SET_POSE, 0, req_data_int_arr, LPRE_HEC_SET))
  END hec_set_pose

-- HEC Function: Perform calibration
ROUTINE hec_calibrate(pipeline_id : INTEGER) : INTEGER
  VAR
    dummy_pose : XYZWPR
    req_data_int_arr : ARRAY[NUM_DATA_INTS_TO_SEND] OF INTEGER
    i : INTEGER
    
  BEGIN
    WRITE TPDISPLAY(LPRE_HEC_CALIB, 'Calibrating pipeline: ', pipeline_id, CR)
    WRITE g_log_file(LPRE_HEC_CALIB, 'Calibrating pipeline: ', pipeline_id, CR)
    
    -- Send data integers: pipeline_id in data1, others zero
    req_data_int_arr[1] = pipeline_id
    FOR i = 2 TO NUM_DATA_INTS_TO_SEND DO
      req_data_int_arr[i] = 0
    ENDFOR
    
    -- Use comprehensive communication helper
    RETURN(gri_communicate_for_confirmation(REQ_ACTION_HEC_CALIBRATE, 0, req_data_int_arr, LPRE_HEC_CALIB))
  END hec_calibrate 