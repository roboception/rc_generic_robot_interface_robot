MODULE RcDebug(READONLY)
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    ! Debug Functions - Obsolete in production
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    
   PROC print_robtarget(string header, robtarget target)
    ErrWrite \I, header, 
            "robtarget: [" + 
            NumToStr(target.trans.x, 1) + "," +
            NumToStr(target.trans.y, 1) + "," +
            NumToStr(target.trans.z, 1) + "] [" +
            NumToStr(target.rot.q1, 3) + "," +
            NumToStr(target.rot.q2, 3) + "," +
            NumToStr(target.rot.q3, 3) + "," +
            NumToStr(target.rot.q4, 3) + "]";
    ENDPROC
    
   PROC print_server_response(VAR rawbytes data)
       VAR num byte;
       VAR string bytes_str;
       VAR num value;
       VAR num float_val;
       
       ! Header values
       UnpackRawBytes data, 1, value, \IntX:=USINT;
       ErrWrite \I, "Magic Number", NumToStr(value,0);
       
       UnpackRawBytes data, 2, value, \IntX:=USINT;
       ErrWrite \I, "Protocol Version", NumToStr(value,0);
       
       UnpackRawBytes data, 3, value, \IntX:=USINT;
       ErrWrite \I, "Message Length", NumToStr(value,0);
       
       UnpackRawBytes data, 4, value, \IntX:=USINT;
       ErrWrite \I, "Pose Format", NumToStr(value,0);
       
       UnpackRawBytes data, 5, value, \IntX:=USINT;
       ErrWrite \I, "Action", NumToStr(value,0);
       
       UnpackRawBytes data, 6, value, \IntX:=USINT;
       ErrWrite \I, "Job ID", NumToStr(value,0);
       
       UnpackRawBytes data, 7, value, \IntX:=USINT;
       ErrWrite \I, "Error Code", NumToStr(value,0);
       
       ! Position data
       UnpackRawBytes data, 8, float_val, \Float4;
       bytes_str := "[" + NumToStr(float_val,3) + ",";
       UnpackRawBytes data, 12, float_val, \Float4;
       bytes_str := bytes_str + NumToStr(float_val,3) + ",";
       UnpackRawBytes data, 16, float_val, \Float4;
       bytes_str := bytes_str + NumToStr(float_val,3) + "]";
       ErrWrite \I, "Position [x,y,z]", bytes_str;
       
       ! Rotation data
       UnpackRawBytes data, 20, float_val, \Float4;
       bytes_str := "[" + NumToStr(float_val,3) + ",";
       UnpackRawBytes data, 24, float_val, \Float4;
       bytes_str := bytes_str + NumToStr(float_val,3) + ",";
       UnpackRawBytes data, 28, float_val, \Float4;
       bytes_str := bytes_str + NumToStr(float_val,3) + ",";
       UnpackRawBytes data, 32, float_val, \Float4;
       bytes_str := bytes_str + NumToStr(float_val,3) + "]";
       ErrWrite \I, "Rotation [q1,q2,q3,q4]", bytes_str;
       
       ! Additional data
       UnpackRawBytes data, 36, value, \IntX:=UDINT;
       ErrWrite \I, "Data Field 1", NumToStr(value,0);
       
       UnpackRawBytes data, 40, value, \IntX:=UDINT;
       ErrWrite \I, "Data Field 2", NumToStr(value,0);
       
       UnpackRawBytes data, 44, value, \IntX:=UDINT;
       ErrWrite \I, "Data Field 3", NumToStr(value,0);
       
       UnpackRawBytes data, 48, value, \IntX:=UDINT;
       ErrWrite \I, "Data Field 4", NumToStr(value,0);
       
       UnpackRawBytes data, 52, value, \IntX:=UDINT;
       ErrWrite \I, "Data Field 5", NumToStr(value,0);
       
   ERROR
       ErrWrite \W, "Debug Error", "Error printing message: " + NumToStr(ERRNO,0);
   ENDPROC
   
ENDMODULE